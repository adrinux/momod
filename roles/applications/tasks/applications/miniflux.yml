---
# Use podman secret to store db user/password?

- name: Create directory for Miniflux database
  ansible.builtin.file:
    path: /data/momod/miniflux-postgres/13
    state: directory
    owner: "{{ app_services_user }}"
    group: "{{ app_services_user }}"
    mode: 0755

- name: Copy pod-miniflux systemd unit file into place
  ansible.builtin.copy:
    src: files/pod-miniflux.service
    dest: /etc/systemd/system/pod-miniflux.service
    owner: root
    group: root
    mode: 0644
# TODO register if this has changed

- name: Copy miniflux-postgres systemd unit file into place
  ansible.builtin.template:
    src: templates/container-miniflux-postgres.service.j2
    dest: /etc/systemd/system/container-miniflux-postgres.service
    owner: "{{ app_services_user }}"
    group: "{{ app_services_user }}"
    mode: 0644
# TODO register if this has changed

- name: Copy miniflux-app systemd unit file into place
  ansible.builtin.template:
    src: templates/container-miniflux-app.service.j2
    dest: /etc/systemd/system/container-miniflux-app.service
    owner: "{{ app_services_user }}"
    group: "{{ app_services_user }}"
    mode: 0644
# TODO register if this has changed

- name: Reread systemd configs
  ansible.builtin.systemd:
    daemon_reload: yes
#  become: true
# TODO read register and only do this if service file has changed

- name: Enable & start miniflux pod container
  ansible.builtin.systemd:
    name: pod-miniflux
    state: restarted
    enabled: yes
#  become: true
# TODO read register and only restart if service file has changed

- name: Enable & start miniflux postgres db container
  ansible.builtin.systemd:
    name: container-miniflux-postgres
    state: restarted
    enabled: yes
#  become: true
# TODO read register and only restart if service file has changed

- name: Enable & start miniflux app container
  ansible.builtin.systemd:
    name: container-miniflux-app
    state: restarted
    enabled: yes
#  become: true
# TODO read register and only restart if service file has changed
